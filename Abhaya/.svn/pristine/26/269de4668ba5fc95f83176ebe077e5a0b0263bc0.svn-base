import { Component, OnInit } from '@angular/core';
import { Router } from '@angular/router';
import { environment } from '../../environments/environment';
import {HttpClient, HttpHeaders} from '@angular/common/http';
import { FormControl, FormGroup } from '@angular/forms';
import { SpinnerVisibilityService } from 'ng-http-loader';
import { Spinkit } from 'ng-http-loader';
import { Login } from './login.model';

@Component({
  selector: 'app-login',
  templateUrl: './login.component.html',
  styleUrls: ['./login.component.css']
})
export class LoginComponent implements OnInit {

  constructor(private router: Router, private  httpClient:  HttpClient, private spinner: SpinnerVisibilityService) {
    console.log('Base Api :' + environment.apiBase +
            ' production? ' +  environment.production +
            ' env: ' + environment.env);
  }
  public spinkit = Spinkit;
  httpOptions = {
    headers: new HttpHeaders({
      'Content-Type': 'application/json',
      'Access-Control-Allow-Headers': 'Origin, X-Requested-With, Content-Type, Accept',
      'Authorization' : 'Basic ' + window.btoa('abhaya-app' + ':' + 'abhaya-secret')
    })
  };
  loginForm: FormGroup;
  loginModel: Login;
  types: String[];
  ngOnInit() {
    this.types = ['UserType', 'Rta', 'Police'];
    this.loginForm = new FormGroup ({
      type: new FormControl('UserType'),
      userName: new FormControl('superadmin'),
      password: new FormControl('admin')
    });
  }

  public login(): void {
    this.loginModel =  this.loginForm.value;
    const url = `${environment.apiBase}/oauth/token`;
    this.spinner.show();
     this.httpClient.post(`${url}?username=${this.loginModel.userName}&password=${this.loginModel.password}&grant_type=password`,
      {}, this.httpOptions).subscribe(data => {
        let type = 'rta';
        if (this.loginModel.type === 'Police') {
          type = 'police';
        }
        this.router.navigate(['/' + type]);
        this.spinner.hide();
      }, error => {
        console.log('error', error);
        this.spinner.hide();
      }
     );
  }

}
